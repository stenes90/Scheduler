//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchedulerV3.RankedinTestDb
{
    using System;
    using System.Collections.Generic;
    
    public partial class TeamLeague
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public TeamLeague()
        {
            this.EventInitiators = new HashSet<EventInitiator>();
            this.RoundRobinMatchPointSettings = new HashSet<RoundRobinMatchPointSetting>();
            this.RoundRobinRuleSettings = new HashSet<RoundRobinRuleSetting>();
            this.TeamDetails = new HashSet<TeamDetail>();
            this.RankingEvents = new HashSet<RankingEvent>();
            this.TeamLeagueAdmins = new HashSet<TeamLeagueAdmin>();
            this.TeamLeagueDivisions = new HashSet<TeamLeagueDivision>();
            this.TeamLeagueNonPlayingDates = new HashSet<TeamLeagueNonPlayingDate>();
            this.TeamLeaguePools = new HashSet<TeamLeaguePool>();
            this.TeamLeagueRegions = new HashSet<TeamLeagueRegion>();
            this.TeamLeagueTeams = new HashSet<TeamLeagueTeam>();
        }
    
        public int Id { get; set; }
        public int InitiatorId { get; set; }
        public string Name { get; set; }
        public bool AcceptOnlyOrganisationMembers { get; set; }
        public bool IsHomeAndAwayPlayed { get; set; }
        public bool IsClubInfoRequired { get; set; }
        public bool OnlyClubAdminCanCreateTeams { get; set; }
        public System.DateTime CloseSignInDate { get; set; }
        public System.DateTime StartDate { get; set; }
        public string Regulations { get; set; }
        public int EventState { get; set; }
        public int TeamMatchesScoringType { get; set; }
        public bool ValidatePlayersByMatchType { get; set; }
        public bool RequireMinPlayersPerTeam { get; set; }
        public int MalePlayersPerTeam { get; set; }
        public int FemalePlayersPerTeam { get; set; }
        public int SportId { get; set; }
        public int CountryId { get; set; }
        public Nullable<int> PaymentType { get; set; }
        public Nullable<decimal> PaymentFee { get; set; }
        public Nullable<int> PaymentCurrency { get; set; }
        public string PayPalAccount { get; set; }
        public System.DateTime DateCreated { get; set; }
        public Nullable<System.DateTime> DateModified { get; set; }
    
        public virtual Country Country { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EventInitiator> EventInitiators { get; set; }
        public virtual Player Player { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RoundRobinMatchPointSetting> RoundRobinMatchPointSettings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RoundRobinRuleSetting> RoundRobinRuleSettings { get; set; }
        public virtual Sport Sport { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TeamDetail> TeamDetails { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RankingEvent> RankingEvents { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TeamLeagueAdmin> TeamLeagueAdmins { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TeamLeagueDivision> TeamLeagueDivisions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TeamLeagueNonPlayingDate> TeamLeagueNonPlayingDates { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TeamLeaguePool> TeamLeaguePools { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TeamLeagueRegion> TeamLeagueRegions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TeamLeagueTeam> TeamLeagueTeams { get; set; }
    }
}
